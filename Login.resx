<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>